# FAAD2 - Freeware Advanced Audio (AAC) Decoder including SBR decoding
# Copyright (C) 2003-2005 M. Bakker, Nero AG, http://www.nero.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# Any non-GPL usage of this software or parts of this software is strictly
# forbidden.
#
# The "appropriate copyright message" mentioned in section 2c of the GPLv2
# must read: "Code from FAAD2 is copyright (c) Nero AG, www.nero.com"
#
# Commercial non-GPL licensing of this software is possible.
# For more info contact Nero AG through Mpeg4AAClicense@nero.com.

name: Build
on:
  push:
    branches: [ master ]
    tags-ignore: ['*']
  pull_request:
    branches: [ master ]

jobs:
  BuildWithAutomake:
    runs-on: ubuntu-latest

    strategy:
     fail-fast: false
     matrix:
       include:
         - name: clang
           cc: clang
           cxx: clang++
           cflags: -Wall -fcolor-diagnostics -fansi-escape-codes
         - name: gcc
           cc: gcc
           cxx: g++
           cflags: -Wall -fdiagnostics-color=always

    env:
      CC: ${{ matrix.cc || 'cc' }}
      CXX: ${{ matrix.cxx || 'cxx' }}
      CFLAGS: ${{ matrix.cflags || '-Wall' }}
      CXXFLAGS: ${{ matrix.cflags || '-Wall' }}

    steps:
    - name: Checkout the source
      uses: actions/checkout@v2
      with:
        submodules: false
        fetch-depth: 1
    - name: Configure and build
      run: |
        ./bootstrap
        mkdir -p $RUNNER_TEMP/usrlocal
        ./configure --prefix=$RUNNER_TEMP/usrlocal
        make clean -j `nproc`
        make -j `nproc`
        make install-strip -j `nproc`

  BuildWithBazel:
    runs-on: ubuntu-latest

    strategy:
     fail-fast: false

    steps:
    - name: Checkout the source
      uses: actions/checkout@v2
      with:
        submodules: false
        fetch-depth: 1
    - name: Configure and build
      run: |
        bazel build :all

  BuildWithCMake:
    runs-on: ubuntu-latest

    strategy:
     fail-fast: false

    steps:
    - name: Checkout the source
      uses: actions/checkout@v2
      with:
        submodules: false
        fetch-depth: 1
    - name: Configure and build
      run: |
        cmake -B build . -DCMAKE_INSTALL_PREFIX=$RUNNER_TEMP/usrlocal
        cmake --build build -j `nproc`
        cmake --install build
